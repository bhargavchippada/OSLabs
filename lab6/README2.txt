Question 3:
In GeekOS, there is just one struct that is common to all kinds if threads. That struct is "Kernel_Thread".
The way you distinguish between a User thread and a Kernel thread is by its fields. Some fields are applicable for User threads whereas some fields are necessary only for Kernel threads. As an example, we take the priority field. A Kernel thread is managed by the process scheduler and so, it carries a priority value. Whereas, a User thread doesn't need a priority value since it doesn't need to be scheduled; it's managed inside the process context itself. A User Thread carries a user context whereas a Kernel thread doesn't. User context is a user mode context which can be attached to a Kernel_Thread, to allow it to execute in user mode (ring 3). This struct has all information needed to create and manage a user memory space, as well as other kernel resources used by the process (such as semaphores and files).
